@model Tourism_Project.Models.Voucher

@{
    ViewBag.Title = "Edit";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/VoucherMasterPage.cshtml";
    <script src="@Url.Content("~/Scripts/Chosen/chosen.jquery.js")"></script>

    int ADMIN = 1, STAFF = 2, AGENT = 3;
    string[] user = User.Identity.Name.Split(',');
    string userType = user[2];//userid,username,usertype

}


<h2 class="h2-heading">Update Booking</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.VoucherBookingID)
    @Html.HiddenFor(model => model.VoucherID)
    <style>
        input[type="number"] {
            width: 44px !important;
        }

        input[type="text"], input[type="date"] {
            width: 300px;
        }

        select {
            width: 314px;
            height: 32px;
            border: 2px solid #BDC3C7;
        }

        textarea {
            width: 290px;
            height: 100px;
        }

        .prices input {
            width: 50px !important;
        }
    </style>
    <style>
        .label {
            text-align: right;
            min-width: 140px;
        }

        @@media(max-width:768px) {
            .chzn-container, input[type="text"], input[type="date"], textarea {
                max-width: 80% !important;
            }

            table td, .editor-label {
                display: block;
                text-align: left;
                width: 100%;
                box-sizing: border-box;
            }

            .top-menu-voucher {
                position: relative !important;
                float: right;
                right: 0;
                top: -27px;
            }

            #body {
                float: left;
                width: 100%;
            }

            .demo-logo {
                width: auto !important;
                float: left;
            }
        }

        @@media(max-width:460px) {

            #body {
                margin-top: 50px;
            }
        }
    </style>
    <script>
        function updateTravelDate()
        {
            //yummy
            //var valid = false;

            //var cardPaid = $("#cardPaid").val();
            //var cashPaid = $("#cashPaid").val();
            //var total = $('#total').val();
            //var totalPaid = 0;

            //console.log(cardPaid);
            //console.log(cashPaid);
            //console.log(total);
            //if ((cardPaid != "" && cardPaid != null)) {
            //    totalPaid = parseInt(cardPaid);
            //}
            //if ((cashPaid != "")) {
            //    totalPaid = totalPaid + parseInt(cashPaid);
            //}

            //if (totalPaid > 0) {
            //    //alert(totalPaid);
            //    if (totalPaid == total) {
            //        valid = true;
            //    }
            //    else {
            //        alert("Pay on Borad must match ");
            //        return false;
            //    }
            //}
            //else {
            //    alert("Please fill card Payment or cash payment");
            //    return false;
            //}

            //END yummy
            if ($(".hasDatepicker").val() != "")
            {

                document.getElementById('TravelDate').value = moment($(".hasDatepicker").datepicker("getDate")).format("MM/DD/YYYY");

                console.log(document.getElementById('TravelDate').value);
                document.forms[0].submit();
            }
            else
            {
                debugger;
                alert("Please Fill Travel Date");
                return false;
            }

        }
    </script>
    <div style="margin-top:2%;overflow:hidden;">
        <table align="center" cellpadding="5">
            <tbody>
                <colgroup>
                    <col align="right">
                </colgroup>
                <tr>
                    <td class="label">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.VoucherID)
                        </div>
                    </td>
                    <td>
                        <div style="font-weight: bold;">
                            @Html.DisplayFor(model => model.VoucherID, new { @style = "font-weight:bold" })
                        </div>
                    </td>
                </tr>

                <tr>

                    <td align="right">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CompanyID, "Company")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.CompanyID, (IEnumerable<SelectListItem>)TempData["Companies"])
                            @*<input disabled="disabled" id="companyCommission" style="width: 40px !important; float: left;" />*@
                            <span id="commissiondiv" style="display: none;">
                                <input disabled="disabled" id="companyCommission" style="width: 40px !important; height: 30px;" />
                            </span>
                            <span id="phonediv" style="display: none;margin-left:10px;">
                                <input disabled="disabled" id="companyPhone" style="width: 300px !important; height: 30px; border: 0; background: none; font-weight: bold;" />
                            </span>
                            @Html.ValidationMessageFor(model => model.CompanyID)
                        </div>
                    </td>
                </tr>

                @*<tr>

                        <td align="right">
                            <div class="editor-label">
                                @Html.Label("Shop Name")


                            </div>
                        </td>
                        <td>
                            <div class="editor-field">


                                @Html.DropDownListFor(model => model.shopId, (IEnumerable<SelectListItem>)TempData["shopname"])


                            </div>
                        </td>
                    </tr>*@

                @*<tr>

                        <td align="right">
                            <div class="editor-label">
                                @Html.Label("Sales From")
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.salesfrom, new List<SelectListItem>{
                                            new SelectListItem {Text="Walk In" , Value="Walk In"},
                                            new SelectListItem{Text= "Email/Phone Call",Value="Email/Phone Call"},
                                            }, "Select Sales From")
                            </div>
                        </td>

                    </tr>*@

                @*remove for hosting
                        <tr>

                        <td align="right">
                            <div class="editor-label">
                                @Html.Label("Payment Type")
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.paymenttype, new List<SelectListItem>{
                                            new SelectListItem {Text="Cash" , Value="Cash"},
                                            new SelectListItem{Text= "CreditCard",Value="CreditCard"},
                                            new SelectListItem{Text= "Paypal",Value="Paypal"},
                                            new SelectListItem{Text= "ETPOS",Value="ETPOS"},
                                            }, "Select Payment Type")
                            </div>
                        </td>

                    </tr>
                *@

                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Travel Date
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.TravelDate, "{0:dd/MM/yyyy}")
                            @Html.ValidationMessageFor(model => model.TravelDate)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Tour)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Tour)
                            @Html.ValidationMessageFor(model => model.Tour)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Fare Basis
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FareBasis)
                            @Html.ValidationMessageFor(model => model.FareBasis)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            First Name
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FirstName)
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Last Name
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.LastName)
                            @Html.ValidationMessageFor(model => model.LastName)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Contact
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.RoomNumber)
                            @Html.ValidationMessageFor(model => model.RoomNumber)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Adult(s)
                        </div>
                    </td>
                    <td>
                        <span class="editor-field counts">
                            @Html.EditorFor(model => model.AdultCount, new { @class = "counts" })
                            @Html.ValidationMessageFor(model => model.AdultCount)
                            <span style="zoom: 2;">|</span>
                            Children
                            @Html.EditorFor(model => model.ChildrenCount, new { @class = "counts" })
                            @Html.ValidationMessageFor(model => model.ChildrenCount)
                            <span style="zoom: 2;">|</span>
                            Infant(s)
                            @Html.EditorFor(model => model.InfantCount, new { @class = "counts" })
                            @Html.ValidationMessageFor(model => model.InfantCount)
                        </span>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Pickup Location
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.PickupLocation)
                            @Html.ValidationMessageFor(model => model.PickupLocation)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ConfirmationNumber)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ConfirmationNumber)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Comments)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Comments)
                            @Html.ValidationMessageFor(model => model.Comments)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Price
                        </div>
                    </td>
                    <td>
                        <div class="editor-field prices">

                            @Html.EditorFor(model => model.Price)
                            @Html.ValidationMessageFor(model => model.Price)
                            &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;
                            Levy
                            @Html.EditorFor(model => model.Levy)
                            @Html.ValidationMessageFor(model => model.Levy)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            DC($)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field prices">

                            @Html.EditorFor(model => model.Discount)
                            @Html.ValidationMessageFor(model => model.Discount)
                            &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;
                            Pay on Board($)
                            <input id="total" disabled="disabled" />

                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Agent Deposit
                        </div>
                    </td>
                    <td>
                        <div class="editor-field prices">

                            @Html.EditorFor(model => model.Commission)
                            @Html.ValidationMessageFor(model => model.Commission)
                            &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;
                            Agent Collects($)
                            <input id="totalOperator" disabled="disabled" />

                        </div>
                    </td>
                </tr>
                @*on 2015-08-25 yummy *@
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Cash Paid
                        </div>
                    </td>
                    <td>
                        <div class="editor-field prices">

                            @Html.EditorFor(model => model.cashPaid)
                            @Html.ValidationMessageFor(model => model.cashPaid)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <div class="editor-label">
                            Card Paid
                        </div>
                    </td>
                    <td>
                        <div class="editor-field prices">
                            @Html.EditorFor(model => model.cardPaid)
                            @Html.ValidationMessageFor(model => model.cardPaid)
                        </div>
                    </td>
                </tr>


                @*End 2015-05-28*@

                <tr>
                    <td></td>
                    <td>

                        @if (Model.Create_Date.Date != DateTime.Now.Date)
                        {
                            if (Int32.Parse(userType) == ADMIN)
                            {
                                <input type="submit" value="Save" class="btn btn-large btn-block btn-primary" onclick="updateTravelDate(); return false;" />
                            }
                        }
                        else
                        {
                            <input type="submit" value="Save" class="btn btn-large btn-block btn-primary" onclick="updateTravelDate(); return false;" />
                        }

                        <p>

                        </p>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>


    var companyCommissionPercentage = 0;
    $(document).ready(function ()
    {
        window.setTimeout(function ()
        {
            $("select").chosen();
        }, 100);
        $('#TravelDate').datepicker({ dateFormat: 'dd/mm/yy' });
        //var from = $("#TravelDate").val().split("-");
        //var date = new Date(from[2], from[1] - 1, from[0]);

        //if (!$.browser.safari) {
        //    $('#TravelDate').datepicker({ dateFormat: 'mm/dd/yy' });
        //    $("#TravelDate").datepicker("setDate", date);
        //}
        //else {
        //    $('#TravelDate').datepicker({ dateFormat: 'mm/dd/yy' });
        //    $("#TravelDate").datepicker("setDate", date);
        //}

        $('#CompanyID').change(function ()
        {
            $.get('/Company/CommisionAndPhone/' + $(this).val(), function (data)
            {
                console.log(data);
                var Details = $.parseJSON(data);

                companyCommissionPercentage = parseInt(Details.Details[0].Commission);
                var companyPhone = (Details.Details[0].Phone == "") ? '' : 'Ph: ' + Details.Details[0].Phone + '';
                $('#companyCommission').val(companyCommissionPercentage.toString() + '%');
                $('#commissiondiv').show();

                $('#companyPhone').val(companyPhone);
                $('#phonediv').show();
            });
        });
        /////////////////////////////////////////
        $('#Price').keyup(function ()
        {
            if (companyCommissionPercentage != 0)
                $('#Commission').val(parseInt($(this).val()) * companyCommissionPercentage / 100);
            calculateFinancials();
        });
        /////////////////////////////////////////
        $('#Levy').keyup(calculateFinancials);
        $('#Commission').keyup(calculateFinancials);
        $('#Discount').keyup(calculateFinancials);
        $('#Commission').change(calculateFinancials);
        calculateFinancials();
        $('#CompanyID').val(@ViewBag.CompanyID);
        $('#CompanyID').change();


    });

    function calculateFinancials()
    {
        var price = $("#Price").val();
        var levy = $('#Levy').val();
        var commission = $('#Commission').val();
        var discount = $('#Discount').val();


        price = isEmpty(price);
        levy = isEmpty(levy);
        commission = isEmpty(commission);
        discount = isEmpty(discount);


        $('#total').val((parseFloat(price) + parseFloat(levy) - parseFloat(commission)));
        //$('#totalOperator').val(parseInt(price) - (parseInt(commission) * parseInt(price) / 100) + parseInt(levy));
        $('#totalOperator').val(parseFloat(commission) - parseFloat(discount));
    }




    function isEmpty(a)
    {
        if (a == "" || a == " ")
            return 0;
        else
        {
            return parseFloat(a);
        }
    }
</script>
